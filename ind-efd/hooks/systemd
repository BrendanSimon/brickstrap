#!============================================================================
#!
#! script to setup/modify the systemd config file.
#!
#!============================================================================

#!----------------------------------------------------------------------------
#! Setup hardware watchdog using systemd.
#!----------------------------------------------------------------------------

SYSTEMD_DIR=/etc/systemd

SYSTEMD_CONF="${SYSTEMD_DIR}/system.conf"

SYSTEMD_CONF_ORIG="${SYSTEMD_CONF}.ORIG"

SYSTEMD_CONF_TMP="${SYSTEMD_CONF}.TMP"

#! Replace DEVICES="" with DEVICES="/dev/ttyPS1"
#! FIXME: This pattern works but isn't pretty.
#! FIXME: Is there a neater or better way to do this?
SED_PATTERNS=""
SED_PATTERNS="${SED_PATTERNS} s/^.*RuntimeWatchdogSec=.*/RuntimeWatchdogSec=20/ ;"
SED_PATTERNS="${SED_PATTERNS} s/^.*ShutdownWatchdogSec=.*/ShutdownWatchdogSec=1min/ ;"

echo "${SYSTEMD_DIR}"
echo "${SYSTEMD_CONF}"
echo "${SYSTEMD_CONF_TMP}"
echo "SED_PATTERNS = ${SED_PATTERNS}"
echo "SED_PATTERNS = '${SED_PATTERNS}'"

#! Make a copy of the original file.
${CHROOTCMD} bash -c "cd ${SYSTEMD_DIR} && cp ${SYSTEMD_CONF} ${SYSTEMD_CONF_ORIG}"

#! Remove temp file so that it's empty to append to.
${CHROOTCMD} rm -f "${SYSTEMD_CONF_TMP}"

#! apply changes and append to temp file.
${CHROOTCMD} bash -c "cd ${SYSTEMD_DIR} && cat ${SYSTEMD_CONF} | sed '${SED_PATTERNS}' >> ${SYSTEMD_CONF_TMP}"

#! Copy/Rename temp file back fo conf file.
${CHROOTCMD} bash -c "cd ${SYSTEMD_DIR} && mv ${SYSTEMD_CONF_TMP} ${SYSTEMD_CONF}"

#!----------------------------------------------------------------------------

#! make sure serial-getty@.service does not try to use the serial port
#! so that it can be used by BrickPi
$CHROOTBINDCMD systemctl mask serial-getty@ttyAMA0.service

#! disable nfs from running by default since most won't use it
$CHROOTBINDCMD systemctl disable nfs-common.service
$CHROOTBINDCMD systemctl disable rpcbind.service

#! disable smbd from running by default. Want to leave nmbd on though.
#$CHROOTBINDCMD systemctl disable smbd.service
#! we really don't want this running - it causes a long timeout on boot
#$CHROOTBINDCMD systemctl mask samba-ad-dc.service

#! disable ddclient from running by default.
#$CHROOTBINDCMD systemctl disable ddclient.service



#! make shell scripts executable.
#! FIXME: why doesn't wildcard work ??
#! FIXME: this is mess and probably shouldn't be here
#$CHROOTCMD chmod ug+x /opt/sbin/*.sh

$CHROOTCMD chmod ug+x /opt/sbin/bash_seconds.sh
$CHROOTCMD chmod ug+x /opt/sbin/check-internet-connection.sh
$CHROOTCMD chmod ug+x /opt/sbin/chrony_watchdog.sh
$CHROOTCMD chmod ug+x /opt/sbin/efd-ping.sh
$CHROOTCMD chmod ug+x /opt/sbin/efd_bootup.sh
$CHROOTCMD chmod ug+x /opt/sbin/modem-apn-update.sh
$CHROOTCMD chmod ug+x /opt/sbin/modem-power-enable.sh
$CHROOTCMD chmod ug+x /opt/sbin/periodic_reboot.sh
$CHROOTCMD chmod ug+x /opt/sbin/periodic_reboot_update.sh
$CHROOTCMD chmod ug+x /opt/sbin/send-sms.sh



#! make python apps/scripts executable.
#! FIXME: why doesn't wildcard work ??
#! FIXME: this is mess and probably shouldn't be here
#$CHROOTCMD chmod ug+x /opt/sbin/*.py

$CHROOTCMD chmod ug+x /opt/sbin/alert_led.py
$CHROOTCMD chmod ug+x /opt/sbin/battery_led.py
$CHROOTCMD chmod ug+x /opt/sbin/blinky.py
$CHROOTCMD chmod ug+x /opt/sbin/cloud.py
$CHROOTCMD chmod ug+x /opt/sbin/ctrl.py
$CHROOTCMD chmod ug+x /opt/sbin/debug_led.py
$CHROOTCMD chmod ug+x /opt/sbin/efd_app.py
$CHROOTCMD chmod ug+x /opt/sbin/efd_config.py
$CHROOTCMD chmod ug+x /opt/sbin/efd_gps.py
$CHROOTCMD chmod ug+x /opt/sbin/efd_measurements.py
$CHROOTCMD chmod ug+x /opt/sbin/efd_modem_status.py
$CHROOTCMD chmod ug+x /opt/sbin/efd_rf_status.py
$CHROOTCMD chmod ug+x /opt/sbin/efd_sensors.py
$CHROOTCMD chmod ug+x /opt/sbin/fpga_adc_clock_count_per_pps.py
$CHROOTCMD chmod ug+x /opt/sbin/fpga_version.py
$CHROOTCMD chmod ug+x /opt/sbin/ind.py
$CHROOTCMD chmod ug+x /opt/sbin/ioctl.py
$CHROOTCMD chmod ug+x /opt/sbin/leds.py
$CHROOTCMD chmod ug+x /opt/sbin/modem.py
$CHROOTCMD chmod ug+x /opt/sbin/modem_led.py
$CHROOTCMD chmod ug+x /opt/sbin/persistent_dict.py
$CHROOTCMD chmod ug+x /opt/sbin/power_led.py
$CHROOTCMD chmod ug+x /opt/sbin/power_os_running.py
$CHROOTCMD chmod ug+x /opt/sbin/pps_led.py
$CHROOTCMD chmod ug+x /opt/sbin/running_led.py
$CHROOTCMD chmod ug+x /opt/sbin/sepl_power_supervisor.py
$CHROOTCMD chmod ug+x /opt/sbin/sepl_shutdown_final.py

#! settings.py fails due to dangling symlink (skip)
#$CHROOTCMD chmod ug+x /opt/sbin/settings.py

$CHROOTCMD chmod ug+x /opt/sbin/sigaction.py
$CHROOTCMD chmod ug+x /opt/sbin/signal2.py
$CHROOTCMD chmod ug+x /opt/sbin/sigqueue.py
$CHROOTCMD chmod ug+x /opt/sbin/spare_led.py
$CHROOTCMD chmod ug+x /opt/sbin/status.py
$CHROOTCMD chmod ug+x /opt/sbin/test_signal2.py
$CHROOTCMD chmod ug+x /opt/sbin/tf_mapping.py
$CHROOTCMD chmod ug+x /opt/sbin/weather.py
$CHROOTCMD chmod ug+x /opt/sbin/weather_led.py



#! Enable efd bootup service
$CHROOTBINDCMD systemctl enable efd-bootup.service

#! Enable efd service
$CHROOTBINDCMD systemctl enable efd.service

#! Enable sepl modem service
$CHROOTBINDCMD systemctl enable sepl-modem.service

#! Enable sepl power supervisor service
$CHROOTBINDCMD systemctl enable sepl-power-supervisor.service

#! Enable sepl shutdown service
$CHROOTBINDCMD systemctl enable sepl-shutdown.service

#! Enable serial getty (login prompt) on /dev/ttyS1 (XBEE port).
$CHROOTBINDCMD systemctl enable serial-getty@ttyS1.service

#! Enable the serial getty on ttyS1 (XBee @ 38400 baud only)
$CHROOTBINDCMD systemctl enable serial-getty@ttyS1.service

#! Enable the efd-logrotate service
$CHROOTBINDCMD systemctl enable efd-logrotate.service



#! DISABLE logging of RF Sysytem status (Modem, GPS)
$CHROOTBINDCMD systemctl disable efd-rf-status.service

#! DISABLE the GPS NMEA Logger service
$CHROOTBINDCMD systemctl disable gps-nmea-logger.service
